generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  cartItems CartItem[]
  orders    Order[]
  addresses Address[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  price       Int
  stock       Int            @default(0)
  categoryId  Int
  category    Category       @relation(fields: [categoryId], references: [id])
  images      ProductImage[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  // ðŸ”¥ back relations ì¶”ê°€
  cartItems  CartItem[]
  orderItems OrderItem[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model CartItem {
  id        Int     @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int     @default(1)
  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
}

model Order {
  id         Int         @id @default(autoincrement())
  userId     Int
  status     OrderStatus @default(PLACED)
  totalPrice Int
  createdAt  DateTime    @default(now())
  user       User        @relation(fields: [userId], references: [id])
  items      OrderItem[]
  addressId  Int?
  address    Address?    @relation(fields: [addressId], references: [id])
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  price     Int
  quantity  Int     @default(1)
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Address {
  id      Int     @id @default(autoincrement())
  userId  Int
  line1   String
  line2   String?
  city    String
  postal  String
  country String
  user    User    @relation(fields: [userId], references: [id])
  orders  Order[]
}

enum OrderStatus {
  PLACED
  PAID
  CANCELLED
}
